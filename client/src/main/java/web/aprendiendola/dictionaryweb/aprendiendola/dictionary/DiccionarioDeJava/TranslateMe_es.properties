#configuracion
NOTFOUND=Palabra no encontrada!.
CLICKTOSEARCH=por favor de click para buscar
#terminos
HELLOWORLD=\u00a1Hola Mundo!
JAVA=Java
THREAD=Hilo
INTERFACE=Interfaz
CLASS=Clase
CONSTRUCTOR=Constructor
METHOD=M\u00e9todo
VARIABLE=Variable
ATTRIBUTE=Atributo

#descripciones
HELLOWORLD_INFO=Hola mundo es un programa que imprime la frase "\u00a1Hola Mundo!".
JAVA_INFO=Java es un lenguaje Orientado a Objetos que puede correr en modo OO y procedural.
THREAD_INFO=Es un flujo de ejecuci\u00f3n, Java puede soportar M\u00faltiples hilos concurrentes y no concurrentes.
INTERFACE_INFO=Las interfaces son la \u00fanica manera en Java de emular la herencia m\u00faltiple. Una clase puede tener muchas interfaces, cada una le a\u00f1ade capacidades a al clase.
VARIABLE_INFO=Variables son tipos b\u00e1sicos u objetos con tipo b\u00e1sicos en su interior, para almacenar los valores en una ejecuci\u00f3n de programa. Pueden ser utilizadas para dos prop\u00f3sitos: almacenar datos que cambian con el tiempo o almacenar valores constantes.
CYCLOMATIC_COMPLEXITY=Complejidad Ciclom\u00e1tica
PACKAGE_INFO=Package-Info
PACKAGE_INFO_INFO=Las clases Package-Info se usan exclusivamente para mostrar JavaDoc a nivel de paquete.
JAVADOC=JavaDoc
CLASS_INFO=<p>Representa tipos de objetos, pero tambi\u00e9n se puede referir a otros conceptos no relacionados con objetos como <div id="dynamic" data-bind="with: 'Package-Info'"><a class="chip blue lighten-3 white-text" href="#" data-bind="text: $data, click:$root.changeSP">Package-Info</a></div></p>
JAVADOC_INFO=JavaDoc son un tipo de comentarios delimitados entre los s\u00edmbolos <b>/**</b> y <b>*/</b> que sirven para documentar paquetes, clases, m\u00e9todos y variables.
METHOD_INFO=Los m\u00e9todos son la manera en la que los objetos pueden realizar acciones
CONSTRUCTOR_INFO=Es un tipo de m\u00e9todo que construye una nueva instancia de un objeto. Si por alguna raz\u00f3nn el constructor no puede terminar, el objeto no ser\u00e1 creado.
ATTRIBUTE_INFO=Los atributos son aquellos valores que forman parte de un objeto y representan sus caracter\u00edsticas mediante el uso de variables.

#ejemplos
HELLOWORLD_CODE=public class <b>HolaMundo</b>{<br>&nbsp;public static void <b>main</b>(String argumentos...){<br>&nbsp;&nbsp;System.out.println("\u00a1Hola Mundo!");<br>&nbsp;}<br>}
CONSTRUCTOR_CODE=class <b>NOMBREDECLASE</b> {<br>public NOMBREDECLASE(PARAMETROS){<br>if(PARAMETROS==null){<br>System.exit(1);<br>}<br>}<br>}
METHOD_CODE=
CLASS_CODE=class <b>NOMBREDECLASE</b> {<br>}
ATTRIBUTE_CODE=
CYCLOMATIC_COMPLEXITY_INFO=Es una medida para aproximar el tiempo m\u00e1ximo requerido para la ejecuci\u00f3n de una clase o m\u00e9todo. Por cada ciclo se incrementa en uno, igual que por cada condici\u00f3n.
