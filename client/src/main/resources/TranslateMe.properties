#config 
NOTFOUND=Word not found. Please click to search.
CLICKTOSEARCH=please click to search

#terms
ATTRIBUTE=Attribute
CLASS=Class
CONSTRUCTOR=Constructor
CYCLOMATIC_COMPLEXITY=Cyclomatic complexity
EXCEPTION=Exception
HELLOWORLD=Hello World!
INTERFACE=Interface
JAVA=Java
JAVADOC=JavaDoc
JVM=Java Virtual Machine
METHOD=Method
PACKAGE=Package
PACKAGE-INFO=Package-Info
THREAD=Thread
VARIABLE=Variable

#descriptions
ATTRIBUTE_INFO=Attributes are those values which are part of an object and represent their characteristics by using variables.
CLASS_INFO= <p>Represent types of objects, but can also refer to other non-object concepts as <div id="dynamic" data-bind="with: 'Package-Info'"><a class="chip blue lighten-3 white-text" href="#" data-bind="text: $data, click:$root.changeSP">Package-Info</a></div></p>
CONSTRUCTOR_INFO=is some type of method that constructs a new Object instance. If for some reason constructor can't finish object will not be created.
CYCLOMATIC_COMPLEXITY_INFO=Is a measure for estimate the maximum required time needed for class or method execution. Increases in one by every cycle and every condition.
EXCEPTION_INFO=Exception is an event that occurs during the execution of a program that disrupts the normal flow of instructions. Exceptions are categorized into two types: checked exceptions and unchecked exceptions
HELLOWORLD_INFO=Hello world is a program that prints the "Hello world!" phrase.
INTERFACE_INFO= Interfaces are the only way in Java to emulate multiple Inheritance. A class can have many interfaces, each one adds a capability to the class.
JAVA_INFO=Java is an Object Oriented language that can run in both OO and procedural modes.
JAVADOC_INFO=JavaDoc are some kinds of comments between the symbols <b>/**</b> and <b>*/</b> that serve to document packages, classes, methods and variables. Your JDK includes a tool to generate documentation in HTML format by default.
JVM_INFO=It is a virtual machine that is responsible for executing Java bytecode. Also provides runtime environment for the java application which includes memory management,thread management and garbage collection. JVM also provides security by separating the class loader and execution engine, which ensures that untrusted code cannot interfere with the normal operation of the system.
METHOD_INFO=Methods are the way in which objects can perform actions
PACKAGE_INFO=Package is a collection of related classes and interfaces
PACKAGE-INFO_INFO=Package-Info classes are used just for showing package level JavaDoc.
THREAD_INFO=Is an execution flux, Java can support Multiple Threads Both concurrent and not concurrent.
VARIABLE_INFO=Variables are basic types or objects with a basic type inside, to hold values during a program execution. Can be used with two purposes: store data that mutates trough time or store constant values.

#code
ATTRIBUTE_CODE=
CLASS_CODE=class <b>CLASSNAME</b> {<br>}
CONSTRUCTOR_CODE=class <b>CLASSNAME</b> {<br>public CLASSNAME(PARAMETERS){<br>if(PARAMETERS==null){<br>System.exit(1);<br>}<br>}<br>}
CYCLOMATIC_COMPLEXITY_CODE=
EXCEPTION_CODE=
HELLOWORLD_CODE=public class <b>HelloWorld</b>{<br>&nbsp;public static void <b>main</b>(String args...){<br>&nbsp;&nbsp;System.out.println("Hello World!");<br>&nbsp;}<br>}
INTERFACE_CODE=
JAVA_CODE=
JAVADOC_CODE=
JVM_CODE=
METHOD_CODE=
PACKAGE_CODE=
PACKAGE-INFO_CODE=
THREAD_CODE=
VARIABLE_CODE=

